
server:
  port: 8002

spring:
  application:
    name: eureka-provider-8002
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://120.24.242.243:3306/test?useSSL=false&serverTimezone=UTC
    username: root
    password: 123456
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    #validationQuery: select 'x'
    testWhileIdle: false
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

logging:
  level:
    com:
      example:
        looedu:
          mapper: debug
# mybatis配置mapper
mybatis:
  type-aliases-package: tk.mybatis.springboot.model
  mapper-locations: classpath*:mapper/*.xml
mapper:
  #   mappers:
  #      com.flowcard.fcardagent.dao.mapper
  not-empty: false
  identity: MYSQL
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

eureka:
  instance:
    hostname: eureka-provider-8002
    instance-id: eureka-provider-8002:${server.port}
    prefer-ip-address: true
  client:
    service-url:
      defaultZone : http://eureka-server-7001:7001/eureka/


info:
  app.name: eureka-provider-8002
  company.name: www.xiaowei.com
  build.artifactId: '@project.artifactId@'
  build.version: '@project.version@'


